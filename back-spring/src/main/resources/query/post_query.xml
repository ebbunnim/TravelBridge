<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.pjt1.demo.model.dao.PostDao">
	<resultMap type="comment" id="cmtMap">
		<result property="cmt_no" column="cmt_no" />
		<result property="cmt_regtime" column="cmt_regtime" />
		<result property="cmt_content" column="cmt_content" />
		<result property="cmt_writer" column="cmt_writer" />
	</resultMap>
	<resultMap type="files" id="filesMap">
		<result property="files_no" column="files_no" />
		<result property="files_url" column="files_url" />
	</resultMap>
	<resultMap type="subcourse" id="subcourseMap">
		<result property="subcourse_no" column="subcourse_no" />
		<result property="subcourse_title" column="subcourse_title" />
	</resultMap>

	<resultMap type="course" id="courseMap">
		<result property="course_no" column="course_no" />
		<result property="course_title" column="course_title" />
		<result property="course_description" column="course_description" />
		<collection property="course_subcourse_list" ofType="subcourse" resultMap="subcourseMap" />
	</resultMap>

	<resultMap id="pcfMap" type="POST">
		<id property="post_no" column="post_no" />
		<result property="mem_no" column="mem_no" />
		<result property="post_type" column="post_type" />
		<result property="board_no" column="board_no" />
		<result property="post_title" column="post_title" />
		<result property="post_content" column="post_content" />
		<result property="post_category" column="post_category" />
		<result property="post_regtime" column="post_regtime" />
		<result property="post_hits" column="post_hits" />
		<result property="post_city" column="post_city" />
		<result property="post_writer" column="post_writer" />
		<result property="post_plan_date" column="post_plan_date" />
		<collection property="post_cmtList" ofType="comment" resultMap="cmtMap" />
		<collection property="post_filesList" ofType="files" resultMap="filesMap" />
		<collection property="post_courseList" ofType="course" resultMap="courseMap" />
	</resultMap>
	<resultMap id="pfMap" type="POST">
		<id property="post_no" column="post_no" />
		<result property="mem_no" column="mem_no" />
		<result property="post_type" column="post_type" />
		<result property="board_no" column="board_no" />
		<result property="post_title" column="post_title" />
		<result property="post_content" column="post_content" />
		<result property="post_category" column="post_category" />
		<result property="post_regtime" column="post_regtime" />
		<result property="post_hits" column="post_hits" />
		<result property="post_city" column="post_city" />
		<result property="post_writer" column="post_writer" />
		<result property="post_plan_date" column="post_plan_date" />
		<collection property="post_filesList" ofType="files" resultMap="filesMap" />
	</resultMap>
	<resultMap id="pcsMap" type="POST">
		<id property="post_no" column="post_no" />
		<result property="mem_no" column="mem_no" />
		<result property="post_type" column="post_type" />
		<result property="board_no" column="board_no" />
		<result property="post_title" column="post_title" />
		<result property="post_content" column="post_content" />
		<result property="post_category" column="post_category" />
		<result property="post_regtime" column="post_regtime" />
		<result property="post_hits" column="post_hits" />
		<result property="post_city" column="post_city" />
		<result property="post_plan_date" column="post_plan_date" />
		<result property="post_writer" column="post_writer" />
		<collection property="post_courseList" ofType="course" resultMap="courseMap" />
	</resultMap>

	<select id="search" parameterType="int" resultMap="pcfMap">
		SELECT 
			p.post_no, 
			p.mem_no,
			p.post_type, 
			p.board_no, 
			p.post_title, 
			p.post_content,
			p.post_category, 
			p.post_regtime, 
			p.post_hits, 
			p.post_city,
			p.post_writer, 
			p.post_plan_date,
			c.cmt_no,
			c.mem_no,
			c.cmt_regtime, 
			c.cmt_content, 
			c.cmt_writer, 
			f.files_no,
			f.files_url,
			cs.course_no,
			cs.course_title,
			cs.course_description,
			cs.course_del_check,
			sub.course_no,
			sub.subcourse_no,
			sub.subcourse_title,
			sub.subcourse_del_check
			FROM POST p 
			LEFT JOIN COMMENT c ON p.post_no = c.post_no AND cmt_del_check = FALSE
			LEFT JOIN FILES f   ON p.post_no = f.post_no AND p.mem_no = f.mem_no AND files_del_check = FALSE
			LEFT JOIN COURSE cs ON p.post_no = cs.post_no AND cs.course_del_check=FALSE
			LEFT JOIN SUBCOURSE sub ON cs.course_no = sub.course_no AND sub.subcourse_del_check=FALSE
			WHERE p.post_no = #{post_no:INTEGER} AND p.post_del_check = FALSE
	</select>

	<select id="searchMyPost" parameterType="int" resultMap="pcfMap">
		SELECT 
			p.post_no, 
			p.mem_no,
			p.post_type, 
			p.board_no, 
			p.post_title, 
			p.post_content,
			p.post_category, 
			p.post_regtime, 
			p.post_hits, 
			p.post_city,
			p.post_writer, 
			p.post_plan_date,
			c.cmt_no,
			c.mem_no,
			c.cmt_regtime, 
			c.cmt_content, 
			c.cmt_writer, 
			f.files_no,
			f.files_url,
			cs.course_no,
			cs.course_title,
			cs.course_description,
			cs.course_del_check,
			sub.course_no,
			sub.subcourse_no,
			sub.subcourse_title,
			sub.subcourse_del_check,
			m.mem_no
			FROM POST p 
			LEFT JOIN MEMBERS m on p.mem_no = m.mem_no AND m.mem_del_check = FALSE
			LEFT JOIN COMMENT c ON p.post_no = c.post_no AND cmt_del_check = FALSE
			LEFT JOIN FILES f   ON p.post_no = f.post_no AND p.mem_no = f.mem_no AND files_del_check = FALSE
			LEFT JOIN COURSE cs ON p.post_no = cs.post_no AND cs.course_del_check=FALSE
			LEFT JOIN SUBCOURSE sub ON cs.course_no = sub.course_no AND sub.subcourse_del_check=FALSE
			WHERE p.mem_no = #{mem_no:INTEGER} AND p.post_del_check = FALSE
			ORDER BY p.post_regtime DESC
	</select>


	<select id="searchAll" resultType="post" resultMap="pcfMap">
		SELECT 
			p.post_no, 
			p.mem_no,
			p.post_type, 
			p.board_no, 
			p.post_title, 
			p.post_content,
			p.post_category, 
			p.post_regtime, 
			p.post_hits, 
			p.post_city,
			p.post_writer, 
			p.post_plan_date,
			c.cmt_no,
			c.mem_no,
			c.cmt_regtime, 
			c.cmt_content, 
			c.cmt_writer, 
			f.files_no,
			f.files_url,
			cs.course_no,
			cs.course_title,
			cs.course_description,
			cs.course_del_check,
			sub.course_no,
			sub.subcourse_no,
			sub.subcourse_title,
			sub.subcourse_del_check
			FROM POST p 
			LEFT JOIN COMMENT c ON p.post_no = c.post_no AND cmt_del_check = FALSE
			LEFT JOIN FILES f   ON p.post_no = f.post_no AND p.mem_no = f.mem_no AND files_del_check = FALSE
			LEFT JOIN COURSE cs ON p.post_no = cs.post_no AND cs.course_del_check=FALSE
			LEFT JOIN SUBCOURSE sub ON cs.course_no = sub.course_no AND sub.subcourse_del_check=FALSE
			WHERE p.post_del_check = FALSE
			ORDER BY p.post_regtime DESC
	</select>
	<select id="searchPagePostAll" parameterType="hashmap" resultMap="pfMap">
		<![CDATA[
		SELECT
			RESULT.rnum,
			RESULT.post_no, 
			RESULT.mem_no,
			RESULT.post_type, 
			RESULT.board_no, 
			RESULT.post_title, 
			RESULT.post_content,
			RESULT.post_category, 
			RESULT.post_regtime, 
			RESULT.post_hits, 
			RESULT.post_city,
			RESULT.post_writer, 
			RESULT.post_plan_date,
			RESULT.files_no,
			RESULT.files_url
		FROM (SELECT 
				(CASE 
					WHEN @vpost_no = a.post_no
					THEN @rownum:=@rownum
					ELSE @rownum:=@rownum+1
				END) AS rnum,
				(@vpost_no:=a.post_no) vpost_no,
				a.*
				FROM
					(SELECT 
						p.*,
		                f.files_no,
						f.files_url
					FROM POST p 
					LEFT JOIN FILES f  ON p.post_no = f.post_no AND p.mem_no = f.mem_no AND files_del_check = FALSE
					WHERE 
					p.post_del_check = FALSE) as a, 
					(SELECT @vpost_no:='', @rownum:=0 FROM DUAL) as b
				) AS RESULT
		WHERE RESULT.rnum > #{startPage} AND RESULT.rnum <= #{endPage}]]>
	</select>
	<select id="searchPagePlan" parameterType="hashmap" resultMap="pfMap">
		<![CDATA[
		SELECT
			RESULT.rnum,
			RESULT.post_no, 
			RESULT.mem_no,
			RESULT.post_type, 
			RESULT.board_no, 
			RESULT.post_title, 
			RESULT.post_content,
			RESULT.post_category, 
			RESULT.post_regtime, 
			RESULT.post_hits, 
			RESULT.post_city,
			RESULT.post_writer, 
			RESULT.post_plan_date,
			RESULT.files_no,
			RESULT.files_url
		FROM (SELECT 
				(CASE 
					WHEN @vpost_no = a.post_no
					THEN @rownum:=@rownum
					ELSE @rownum:=@rownum+1
				END) AS rnum,
				(@vpost_no:=a.post_no) vpost_no,
				a.*
				FROM
					(SELECT 
						p.*,
		                f.files_no,
						f.files_url
					FROM POST p 
					LEFT JOIN FILES f  ON p.post_no = f.post_no AND p.mem_no = f.mem_no AND files_del_check = FALSE
					WHERE 
					p.post_del_check = FALSE
					AND p.post_type = 1) as a, 
					(SELECT @vpost_no:='', @rownum:=0 FROM DUAL) as b
				) AS RESULT
		WHERE RESULT.rnum > #{startPage} AND RESULT.rnum <= #{endPage}]]>
	</select>
	<select id="searchPagePost" parameterType="hashmap" resultMap="pfMap">
		<![CDATA[
		SELECT
			RESULT.rnum,
			RESULT.post_no, 
			RESULT.mem_no,
			RESULT.post_type, 
			RESULT.board_no, 
			RESULT.post_title, 
			RESULT.post_content,
			RESULT.post_category, 
			RESULT.post_regtime, 
			RESULT.post_hits, 
			RESULT.post_city,
			RESULT.post_writer, 
			RESULT.post_plan_date,
			RESULT.files_no,
			RESULT.files_url
		FROM (SELECT 
				(CASE 
					WHEN @vpost_no = a.post_no
					THEN @rownum:=@rownum
					ELSE @rownum:=@rownum+1
				END) AS rnum,
				(@vpost_no:=a.post_no) vpost_no,
				a.*
				FROM
					(SELECT 
						p.*,
		                f.files_no,
						f.files_url
					FROM POST p 
					LEFT JOIN FILES f  ON p.post_no = f.post_no AND p.mem_no = f.mem_no AND files_del_check = FALSE
					WHERE 
					p.post_del_check = FALSE
					AND p.post_type = 0) as a, 
					(SELECT @vpost_no:='', @rownum:=0 FROM DUAL) as b
				) AS RESULT
		WHERE RESULT.rnum > #{startPage} AND RESULT.rnum <= #{endPage}]]>
	</select>
	<select id="searchFollowingPeoplePost" parameterType="int" resultMap="pcfMap">
		SELECT 
			p.post_no, 
			p.mem_no,
			p.post_type, 
			p.board_no, 
			p.post_title, 
			p.post_content,
			p.post_category, 
			p.post_regtime, 
			p.post_hits, 
			p.post_city,
			p.post_writer, 
			p.post_plan_date,
			f.files_no,
			f.files_url,
			cs.course_title,
			cs.course_description,
			cs.course_del_check
		FROM POST p 
			LEFT JOIN FILES f  ON p.post_no = f.post_no AND p.mem_no = f.mem_no AND files_del_check = FALSE
			LEFT JOIN COURSE cs ON p.post_no = cs.post_no AND cs.course_del_check = FALSE
		WHERE p.mem_no
		IN
			(SELECT f.following_no
			FROM MEMBERS m1
			LEFT JOIN FOLLOW f
			ON m1.mem_no = f.follower_no
			LEFT JOIN MEMBERS m2
			ON f.following_no = m2.mem_no
			WHERE m1.mem_no = #{mem_no:INTEGER}
			AND m1.mem_del_check = FALSE 
			AND m2.mem_del_check = FALSE 
			AND f.follow_del_check = FALSE)
		ORDER BY p.post_regtime DESC
	</select>

	<select id="getPostLikes" parameterType="int" resultType="int">
		SELECT COUNT(*) 
		FROM LIKES
		WHERE post_no = #{post_no};
	</select>
	<select id="updatePostHits" parameterType="int">
		UPDATE POST 
		SET post_hits = post_hits + 1 
		WHERE post_no = #{post_no};
	</select>
	<insert id="insert" parameterType="post">
		INSERT INTO POST
		(post_type, 
		post_no,
		board_no, 
		mem_no, 
		post_title, 
		post_content, 
		post_category, 
		post_city,
		post_writer,
		post_plan_date)
		VALUES(
			#{post_type:INTEGER},#{post_no:INTEGER}, #{board_no:INTEGER}, #{mem_no:INTEGER},
			#{post_title:VARCHAR}, #{post_content:VARCHAR}, #{post_category:VARCHAR}, #{post_city:VARCHAR},
			#{post_writer:VARCHAR}, #{post_plan_date:VARCHAR}
		)
	</insert>
	<update id="update" parameterType="post">
		UPDATE POST 
		SET
		post_type=#{post_type:INTEGER}, 
		board_no=#{board_no:INTEGER}, 
		mem_no=#{mem_no:INTEGER},
		post_title=#{post_title:VARCHAR}, 
		post_content= #{post_content:VARCHAR}, 
		post_category=#{post_category:VARCHAR},
		post_regtime=CURRENT_TIMESTAMP(),
		post_city=#{post_city:VARCHAR},
		post_writer=#{post_writer:VARCHAR},
		post_del_check=#{post_del_check:BOOLEAN},
		post_plan_date=#{post_plan_date:VARCHAR}
		where post_no=#{post_no}
	</update>
	<select id="searchPagePostByOption" parameterType="hashmap" resultMap="pcfMap">
		<![CDATA[SELECT
			RESULT.rnum,
			RESULT.post_no,
			RESULT.mem_no,
			RESULT.post_type,
			RESULT.board_no,
			RESULT.post_title,
			RESULT.post_content,
			RESULT.post_category,
			RESULT.post_regtime,
			RESULT.post_hits,
			RESULT.post_city,
			RESULT.post_writer,
			RESULT.post_plan_date,
			RESULT.files_no,
			RESULT.files_url,
			RESULT.cmt_no,
			RESULT.cmt_regtime, 
			RESULT.cmt_content, 
			RESULT.cmt_writer, 
			RESULT.course_no,
			RESULT.course_title,
			RESULT.course_description
		FROM (SELECT
				(CASE
					WHEN @vpost_no = a.post_no
					THEN @rownum:=@rownum
					ELSE @rownum:=@rownum+1
				END) AS rnum,
				(@vpost_no:=a.post_no) vpost_no,
				a.*
				FROM
					(SELECT
						p.*,
						f.files_no,
						f.files_url,
						c.cmt_no,
						c.cmt_regtime, 
						c.cmt_content, 
						c.cmt_writer, 
						cs.course_no,
						cs.course_title,
						cs.course_description
					FROM POST p
					LEFT JOIN COMMENT c ON p.post_no = c.post_no AND c.cmt_del_check = FALSE
					LEFT JOIN FILES f   ON p.post_no = f.post_no AND p.mem_no = f.mem_no AND f.files_del_check = FALSE
					LEFT JOIN COURSE cs ON p.post_no = cs.post_no AND cs.course_del_check=FALSE
					WHERE p.post_del_check = FALSE
					ORDER BY p.post_regtime DESC)
					as a,
					(SELECT @vpost_no:='', @rownum:=0 FROM DUAL) as b
				) AS RESULT
		WHERE RESULT.rnum >#{startPage} AND  RESULT.rnum <= #{endPage}]]>
		<choose>
			<when test="searchOption == 'all'">
				<if test="word != null">
				AND
				(post_title like concat('%','${word}','%')
				OR post_content like concat('%','${word}','%')
				OR post_category like concat('%','${word}','%')
				OR post_city like concat('%','${word}','%'))
				</if>
			</when>
			<when test="searchOption == 'title'">
				AND	post_title like concat('%','${word}','%')
			</when>
			<when test="searchOption == 'content'">
				AND post_content like concat('%','${word}','%')
			</when>
			<when test="searchOption == 'tag'">
				AND post_category like concat('%','${word}','%')
			</when>
			<when test="searchOption == 'city'">
				AND post_city like concat('%','${word}','%')
			</when>
		</choose>
		<!-- ORDER BY p.post_regtime DESC -->
	</select>


	<delete id="delete" parameterType="int">
	   UPDATE POST SET post_del_check = TRUE WHERE post_no = #{post_no:INTEGER} AND post_del_check = FALSE
	</delete>
	<delete id="deleteChildLike" parameterType="hashmap">
		<choose>
			<when test="list.size!=0">
				UPDATE LIKES 
			SET like_del_check = TRUE 
			WHERE like_no in
				<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
				#{item}
			</foreach>
			</when>
			<otherwise>
			SELECT 0 FROM DUAL;
		</otherwise>
		</choose>
	</delete>
	<select id="findChildLike" parameterType="int" resultType="likes">
		SELECT like_no
		FROM LIKES
		WHERE like_type = 1 AND post_no = #{post_no:INTEGER} AND like_del_check = FALSE
	</select>
	<delete id="deleteChildCmt" parameterType="hashmap">
		<choose>
			<when test="list.size!=0">
				UPDATE COMMENT 
			SET cmt_del_check = TRUE 
			WHERE cmt_no in
				<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
				#{item}
			</foreach>
			</when>
			<otherwise>
			SELECT 0 FROM DUAL;
		</otherwise>
		</choose>
	</delete>
	<select id="findChildCmt" parameterType="int" resultType="comment">
		SELECT cmt_no
		FROM COMMENT
		WHERE post_no = #{post_no:INTEGER} 
		AND cmt_del_check = FALSE
	</select>
	<delete id="deleteChildFiles" parameterType="hashmap">
		<choose>
			<when test="list.size!=0">
				UPDATE FILES 
			SET files_del_check = TRUE 
			WHERE files_no in
				<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
				#{item}
			</foreach>
			</when>
			<otherwise>
			SELECT 0 FROM DUAL;
		</otherwise>
		</choose>
	</delete>
	<select id="findChildFiles" parameterType="int" resultType="files">
		SELECT files_no
		FROM FILES
		WHERE post_no = #{post_no:INTEGER} AND files_del_check = FALSE
	</select>

	<select id="searchFollowingPost" parameterType="int" resultType="post">
		SELECT p.*
		FROM POST p
		INNER JOIN FOLLOW f
		ON p.mem_no = f.follower_no
		LEFT JOIN COURSE cs ON p.post_no = cs.post_no
		WHERE f.following_no = #{following_no:INTEGER}
		ORDER BY p.post_regtime desc
	</select>
	<select id="searchLastNo" resultType="int">
		SELECT max(post_no) from POST
	</select>


</mapper> <!--       
   searchPagePost
   <![CDATA[
        SELECT 
		p.post_no, 
		p.mem_no,
		p.post_type, 
		p.board_no, 
		p.post_title, 
		p.post_content,
		p.post_category, 
		p.post_regtime, 
		p.post_hits, 
		p.post_city,
		p.post_writer, 
		p.post_plan_date,
		f.files_no,
		f.files_url
		FROM POST p 
		LEFT JOIN FILES f  ON p.post_no = f.post_no AND p.mem_no = f.mem_no AND files_del_check = FALSE
		WHERE p.post_no> #{startPage} and p.post_no<=#{endPage} AND p.post_del_check = FALSE
<<<<<<< HEAD
		AND p.post_type = 0]]> -->
